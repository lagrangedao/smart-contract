{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0xa45845f7611094b6c9d1431c7714d61a830fa3f7008568524ee0c470303c246b",
      "kind": "uups"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0x69da37b5e0004c2d95ad075f3b1f22c2b03d8ff5c42e1a4218231279812a1f71",
      "kind": "uups"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x6493847b0aacb5cf69011dd437f324ed5abba084d4f75cab05cd4476993ce0fe",
      "kind": "uups"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xabe1d05aa8eb2260779682eb4604049cb56644a0d4b2b5be18d2334f0805e21a",
      "kind": "uups"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x457e3adc92412bd4c50689f0c9c0f455cd80c986d84551922c8497363898457e",
      "kind": "uups"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0xcd67015af81949871b0da70c27b24ad8b1d9ef3ba85c4e2a57656ee71c87b16f",
      "kind": "uups"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x430fdd15c47449123d4d6ddaf7f12848c23fc81881c3538adeff620666c30eee",
      "kind": "uups"
    },
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0xcc1d35803f23bd52d189b2f67e598448d189c89f8e5ea04ca9aae2ecc9fe87eb",
      "kind": "uups"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x3bf6f5d645572c3064a64db14510cea1f190d00c15b14891c245caca84457cf5",
      "kind": "uups"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x9f36bb113e740a39cf7ef514a7ae718514235eb310862354ecb0c272f2b06452",
      "kind": "uups"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0x89fe4c8e104e05f33a604b17dfa8ad45f5e655215b27c79ce2070384192a6179",
      "kind": "uups"
    }
  ],
  "impls": {
    "1aae93bfef72b5cf5aa20763bdfc4d60b60cf2f12650fe8e4117fc23e39e47da": {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x1a157c7db94d5999617dc45c5092a5e9314aa01f10023928292d5845ec6b571f",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "tasks",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Task)5874_storage)",
            "contract": "TaskManager",
            "src": "contracts/TaskManager.sol:35"
          },
          {
            "label": "isAdmin",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaskManager",
            "src": "contracts/TaskManager.sol:36"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IERC20)4968",
            "contract": "TaskManager",
            "src": "contracts/TaskManager.sol:38"
          },
          {
            "label": "refundClaimDuration",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "TaskManager",
            "src": "contracts/TaskManager.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)4968": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Task)5874_storage)": {
            "label": "mapping(string => struct TaskManager.Task)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Task)5874_storage": {
            "label": "struct TaskManager.Task",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assignedCP",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "taskDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "taskDeadline",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "refundDeadline",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "revenue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lockedRevenue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lockedCollateral",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "processingRefundClaim",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string"
          }
        }
      }
    },
    "6a3ecd8a48b5810db12e1a7f3adfc1f6e6b32c6cb0f7b9fc038de97771f367db": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xd56ec1eecead2da74caa6050d678a82a60ae2a37ff4008316cc92ce2f495138c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20)1361",
            "contract": "SpacePaymentV6",
            "src": "contracts/SpacePaymentV6.sol:12"
          },
          {
            "label": "isAdmin",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SpacePaymentV6",
            "src": "contracts/SpacePaymentV6.sol:26"
          },
          {
            "label": "hardwareInfo",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_struct(Hardware)1388_storage)",
            "contract": "SpacePaymentV6",
            "src": "contracts/SpacePaymentV6.sol:28"
          },
          {
            "label": "spaceInfo",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_string_memory_ptr,t_struct(SpaceInfo)1381_storage)",
            "contract": "SpacePaymentV6",
            "src": "contracts/SpacePaymentV6.sol:29"
          },
          {
            "label": "claimable",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
            "contract": "SpacePaymentV6",
            "src": "contracts/SpacePaymentV6.sol:30"
          },
          {
            "label": "refundClaimDuration",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "SpacePaymentV6",
            "src": "contracts/SpacePaymentV6.sol:47"
          },
          {
            "label": "tasks",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Task)1535_storage)",
            "contract": "SpacePaymentV6",
            "src": "contracts/SpacePaymentV6.sol:64"
          },
          {
            "label": "arWallet",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "SpacePaymentV6",
            "src": "contracts/SpacePaymentV6.sol:66"
          },
          {
            "label": "apWallet",
            "offset": 0,
            "slot": "209",
            "type": "t_address",
            "contract": "SpacePaymentV6",
            "src": "contracts/SpacePaymentV6.sol:67"
          },
          {
            "label": "revenueToken",
            "offset": 0,
            "slot": "210",
            "type": "t_contract(IERC20)1361",
            "contract": "SpacePaymentV6",
            "src": "contracts/SpacePaymentV6.sol:68"
          },
          {
            "label": "paymentToRevenueRate",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "SpacePaymentV6",
            "src": "contracts/SpacePaymentV6.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1361": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(address => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(SpaceInfo)1381_storage)": {
            "label": "mapping(string => struct SpacePaymentV6.SpaceInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Task)1535_storage)": {
            "label": "mapping(string => struct SpacePaymentV6.Task)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Hardware)1388_storage)": {
            "label": "mapping(uint256 => struct SpacePaymentV6.Hardware)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hardware)1388_storage": {
            "label": "struct SpacePaymentV6.Hardware",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerHour",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(SpaceInfo)1381_storage": {
            "label": "struct SpacePaymentV6.SpaceInfo",
            "members": [
              {
                "label": "hardwareId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "expiryDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Task)1535_storage": {
            "label": "struct SpacePaymentV6.Task",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cp",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "taskDeadline",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "refundDeadline",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "revenue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "collateral",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "processingRefundClaim",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "cpRevenue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7f479f62e4825cee4331a7c66004ba9a94e8ac738d0cd374a0f0b07db3323e0a": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xbb05817e21583ca05b618a7e2e3b58d2becb7c5a7311236f66e84b5dd7079527",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c1f918c15a4b866543f51b74f17e9f2d6dc47ad836b80a31b3b4f04e8646ba2e": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x8af6f9584d8ddb06d112533ba2f72b5330c9fb5bbcf3d01c1dee52a5c57f777c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collateralToken",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20)1441",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:11"
          },
          {
            "label": "isAdmin",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:13"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1441": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ec2b70c138bdce9466e6783114e0621bde7a937a8fa8f8cace856b6debc46272": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xa985bbd8804fdf70afe68b6c78cb654f7f21a5d8ccd165a9bc57f281917fab10",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20)6058",
            "contract": "PaymentContract",
            "src": "contracts/staking/PaymentContract.sol:12"
          },
          {
            "label": "arWallet",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "PaymentContract",
            "src": "contracts/staking/PaymentContract.sol:14"
          },
          {
            "label": "isAdmin",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PaymentContract",
            "src": "contracts/staking/PaymentContract.sol:24"
          },
          {
            "label": "hardwareInfo",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(Hardware)12715_storage)",
            "contract": "PaymentContract",
            "src": "contracts/staking/PaymentContract.sol:25"
          },
          {
            "label": "claimable",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
            "contract": "PaymentContract",
            "src": "contracts/staking/PaymentContract.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)6058": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(address => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Hardware)12715_storage)": {
            "label": "mapping(uint256 => struct PaymentContract.Hardware)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hardware)12715_storage": {
            "label": "struct PaymentContract.Hardware",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerHour",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "11381485c9488168f836f1d35c20ea31e0bf0165db4c6e0594038de0648741f5": {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0x11e7562d854c06e7c20fd7b67429836f2465b2369dd0083c07217b62289f61d6",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collateralToken",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20)1441",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:11"
          },
          {
            "label": "isAdmin",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:13"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1441": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
