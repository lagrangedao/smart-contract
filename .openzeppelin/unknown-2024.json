{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x2418d10f3B536dfDcBA881BC6e9b729C411c4Ca4",
      "txHash": "0xa8a4bf9b36417c1fff29fbccc99c0da6d2bd0c765f8ab963253bc6d700621436",
      "kind": "uups"
    },
    {
      "address": "0xd0370c1D117653Be799AC697FdfB3C8B1A80Dec1",
      "txHash": "0x1d247556248fdac3a806c7725061fcacdc60f2a35e33923d131d8c85e99df031",
      "kind": "uups"
    },
    {
      "address": "0xd5328354c83BA6bCe97CD24b444b070Dd00AB1cf",
      "txHash": "0x6781fadbcf550818eba730136ea1790d5134925b0879cc73ac56f8c09ae39ffa",
      "kind": "uups"
    },
    {
      "address": "0xF0F98f476b1a5c1c6EA97eEb23d8796F553246d9",
      "txHash": "0xab3730d5d14f01ad142c44cf97492200e84bd773a0c46a7ccec427bac66233b5",
      "kind": "uups"
    },
    {
      "address": "0xA50adbaDd63947c198802f54C2B14F7c09104A90",
      "txHash": "0x59df7b796b52e680a6aa01f893095428742ff7b7710f72b7e625cc0b33bd6272",
      "kind": "uups"
    }
  ],
  "impls": {
    "77a0bb49a2a0a9c00fc49ba610e0b86f72634b03aa71b39184fd2b4447a643e2": {
      "address": "0xB48c5D1c025655BA79Ac4E10C0F19523dB97c816",
      "txHash": "0x4fcc3d3dcedd43a129f5972d55a3a152cebfecc462e00418fa690401ab5f31db",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collateralToken",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20)1441",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:11"
          },
          {
            "label": "isAdmin",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:13"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1441": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "53c7dbe780b1ba3db1767cdfbe5cc49ac6a68f18199e8ce84f636a3706e75c07": {
      "address": "0x5584B63F30A022154fD80915020856d99eAD9Fe0",
      "txHash": "0x386f27229b49a1ca9c05975181aebe1cd8ebffc146690614316bc448f236284e",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collateralContract",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(CollateralContract)2410",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:14"
          },
          {
            "label": "implementation",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:15"
          },
          {
            "label": "arWallet",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:16"
          },
          {
            "label": "apWallet",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:17"
          },
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20)1441",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:18"
          },
          {
            "label": "isAdmin",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:25"
          },
          {
            "label": "tasks",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:26"
          },
          {
            "label": "refundClaimDuration",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CollateralContract)2410": {
            "label": "contract CollateralContract",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)1441": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string"
          }
        }
      }
    },
    "ec2b70c138bdce9466e6783114e0621bde7a937a8fa8f8cace856b6debc46272": {
      "address": "0x188b2685030137b9105d302E30F0D280F7Fa814A",
      "txHash": "0xd8e75d3e303ca350fcdca83e6d3260aabdce07024536fa386cac821b5aed2a48",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20)6058",
            "contract": "PaymentContract",
            "src": "contracts/staking/PaymentContract.sol:12"
          },
          {
            "label": "arWallet",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "PaymentContract",
            "src": "contracts/staking/PaymentContract.sol:14"
          },
          {
            "label": "isAdmin",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PaymentContract",
            "src": "contracts/staking/PaymentContract.sol:24"
          },
          {
            "label": "hardwareInfo",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(Hardware)13404_storage)",
            "contract": "PaymentContract",
            "src": "contracts/staking/PaymentContract.sol:25"
          },
          {
            "label": "claimable",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
            "contract": "PaymentContract",
            "src": "contracts/staking/PaymentContract.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)6058": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(address => mapping(string => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Hardware)13404_storage)": {
            "label": "mapping(uint256 => struct PaymentContract.Hardware)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hardware)13404_storage": {
            "label": "struct PaymentContract.Hardware",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pricePerHour",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6257058da8f8c42615c87c10c5a0636439a94c844edc76ae2ba02cb5c5ae5e95": {
      "address": "0xfb7d4A9843479d3AB15436cE3920c9efedE3CD52",
      "txHash": "0x93f0bb527caf7d0354977798c3b0f5fda565a8b27907196404c371bd055dcf8c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collateralContract",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(CollateralContract)2407",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:14"
          },
          {
            "label": "implementation",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:15"
          },
          {
            "label": "arWallet",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:16"
          },
          {
            "label": "apWallet",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:17"
          },
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20)1441",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:18"
          },
          {
            "label": "isAdmin",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:25"
          },
          {
            "label": "tasks",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:26"
          },
          {
            "label": "refundClaimDuration",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CollateralContract)2407": {
            "label": "contract CollateralContract",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)1441": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string"
          }
        }
      }
    },
    "5512d5383782d4428daf0b20af0f377f40b403815414632bed7b07307abc38e8": {
      "address": "0xF75200c0B31A139C7a93D8c0c7D9909d0DeA67E8",
      "txHash": "0x6df6830f9370569cab3bb725980703bb7c80a5627d72a5cfc795dd38ebb293b3",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collateralContract",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(CollateralContract)2407",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:14"
          },
          {
            "label": "implementation",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:15"
          },
          {
            "label": "arWallet",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:16"
          },
          {
            "label": "apWallet",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:17"
          },
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20)1441",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:18"
          },
          {
            "label": "isAdmin",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:25"
          },
          {
            "label": "tasks",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:26"
          },
          {
            "label": "refundClaimDuration",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "BiddingContract",
            "src": "contracts/staking/BiddingContract.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CollateralContract)2407": {
            "label": "contract CollateralContract",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)1441": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string"
          }
        }
      }
    },
    "408aa2424fd4ab44e414f94dad5170b75d22eef2982bbd19f7d50fd9ce671825": {
      "address": "0x048e0dfb8B8F55cc21D17A51bbBB0bA84Fb1A842",
      "txHash": "0xebccf133c864933c905791b367d491a7a972ea4f7ca5b9962ffcb5118a294a9a",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collateralToken",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20)1441",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:11"
          },
          {
            "label": "isAdmin",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:13"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:14"
          },
          {
            "label": "totalFrozenBalance",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:15"
          },
          {
            "label": "taskBalance",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1441": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "19f070e974c9924567b6d0b569842dfa52dc1641046dd78d6aa17ccb3462923e": {
      "address": "0x5d69047B9c906986b3a402BC308406166c3967Aa",
      "txHash": "0x7611bd17c37551a20acda9da52dd0e104a599b4e1555fe163338a362b8d69c0c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collateralToken",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20)1441",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:11"
          },
          {
            "label": "isAdmin",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:13"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:14"
          },
          {
            "label": "totalFrozenBalance",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:15"
          },
          {
            "label": "taskBalance",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:16"
          },
          {
            "label": "frozenBalance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CollateralContract",
            "src": "contracts/staking/CollateralContract.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1441": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
